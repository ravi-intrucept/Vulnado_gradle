name: SCA Check and Gradle Build
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
jobs:
  sca-and-build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: List repository contents
      run: ls -R
    
    - name: Check Gradle Wrapper files
      run: |
        if [ -f "gradlew" ] && [ -f "gradlew.bat" ] && [ -d "gradle/wrapper" ]; then
          echo "Gradle Wrapper files found."
        else
          echo "Gradle Wrapper files are missing."
          echo "Contents of the current directory:"
          ls -la
          echo "Contents of the gradle directory (if it exists):"
          [ -d "gradle" ] && ls -la gradle || echo "gradle directory not found"
          exit 1
        fi
    
    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v1
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Ensure gradlew is executable
      run: chmod +x gradlew
    
    - name: Create project zip
      run: zip -r project.zip . -x "*.git*"
    
    - name: Install jq
      run: sudo apt-get update && sudo apt-get install -y jq
    
    - name: Perform SCA Scan
      id: sca
      run: |
        RESPONSE=$(curl -X POST \
          -H "Client-ID: ${{ secrets.INTRUCEPT_CLIENT_ID }}" \
          -H "Client-Secret: ${{ secrets.INTRUCEPT_CLIENT_SECRET }}" \
          -F "projectZipFile=@project.zip" \
          -F "applicationId=${{ secrets.INTRUCEPT_APPLICATION_ID }}" \
          -F "scanName=SCA Scan - Gradle - from GitHub Actions" \
          https://appsecops-api.intruceptlabs.com/api/v1/integrations/sca-scans)
        
        
        
        ERROR=$(echo "$RESPONSE" | jq -r '.error // empty')
        if [ ! -z "$ERROR" ]; then
          echo "Error in SCA Scan: $ERROR"
          exit 1
        fi
        
        VULNS_TABLE=$(echo "$RESPONSE" | jq -r '.vulnsTable')
        echo "Vulnerabilities Table::"
        echo "$VULNS_TABLE"
    
    - name: Build with Gradle
      run: ./gradlew build
    
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: project-files
        path: project.zip
    
    - name: Upload Gradle logs
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: gradle-logs
        path: build/reports
